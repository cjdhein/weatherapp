 
const Weatherman = require('./weatherman.js');


/**
 * Class:	City
 *
 * Desc:	Holds the data returned by API calls for each city. Has a function to update data and
 *			one to return the City's currently held data.
 */

class City {
	/**
	 * Create a city.
	 * parameter: "value",  {number} id - The OpenWeatherMap API id associated with the city.
	 */

	// Create and instantiate variables
	constructor(id){
		this.cityId = id;
		this.cityName = null;
		this.weather = null;
		this.main = null;
		this.visibility = null;
		this.wind = null;
		this.clouds = null;
		this.forecast = [];
		
		/* Trigger the initial pull / update of data on object creation */
		this.update();
	}

	/**
	 * Update the current weather and forecast data for the city.
	 */
	update(){
		return new Promise((resolve,reject) => {

			// Call Weatherman to retrieve current weather from API
			Weatherman.currentWeather(this.cityId)

				// Set pertinent variables to API results
				.then((apiResult) => {
					this.cityName = apiResult.name;
					this.weather = apiResult.weather;
					this.main = apiResult.main;
					this.visibility = apiResult.visibility;
					this.wind = apiResult.wind;
					this.clouds = apiResult.clouds;		
				})

				// Call Weatherman to retrieve forecasted weather from API
				.then(() => {
					return Weatherman.forecast(this.cityId)
				})
				
				// Set pertinent variables to API results
				.then((forecastResult) => {
					this.forecast = forecastResult.list;
				})
				
				// Resolve the promise
				.then(()=> {
					resolve(true)
				})
				
				.catch(error => console.error(error));
		});
	}	
}

/* Export the class to be used elsewhere */
module.exports = City;
